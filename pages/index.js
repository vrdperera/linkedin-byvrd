import { getSession, useSession } from 'next-auth/react';
import { useRecoilState } from 'recoil';
import { modalState, modalTypeState } from '../atoms/modalAtom';

import Head from 'next/head';
import Feed from '../components/feed';
import Header from '../components/header';
import Sidebar from '../components/sidebar';
import { AnimatePresence } from 'framer-motion';
import Modal from '../components/modal';
import { connectToDatabase } from '../utlis/mongodb_client';
import Widgets from '../components/widgets';

export default function Home({ posts, articles }) {
  console.log('results', articles);
  const { data: session } = useSession();
  const [modalOpen, setModalOpen] = useRecoilState(modalState);
  const [modalType, setModalType] = useRecoilState(modalTypeState);

  return (
    <div className="bg-[#f2f3ef] dark:bg-black dark:text-white h-screen overflow-y-scroll md:space-y-6">
      <Head>
        <title>Feed | LinkedIn</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="flex justify-center gap-x-5 sm:px-12">
        <div className="flex flex-col md:flex-row gap-5">
          {/* sidebar */}
          <Sidebar />
          {/* feed */}
          <Feed posts={posts} />
        </div>
        {/* widgets */}
        <Widgets articles={articles} />
        <AnimatePresence>
          {modalOpen && (
            <Modal handleClose={() => setModalOpen(false)} type={modalType} />
          )}
        </AnimatePresence>
      </main>
    </div>
  );
}

export async function getServerSideProps(ctx) {
  const session = await getSession(ctx);
  if (!session) {
    return { redirect: { destination: '/home', permanent: false } };
  }

  // Posts render on the server side
  const { db } = await connectToDatabase();
  const posts = await db
    .collection('posts')
    .find()
    .sort({ timestamp: -1 })
    .toArray();

  // news api
  const results = await fetch(
    `https://newsapi.org/v2/top-headlines?country=us&apiKey=${process.env.NEWS_API_KEY}`
  ).then((res) => res.json());

  return {
    props: {
      session,
      articles: results.articles,
      posts: JSON.parse(JSON.stringify(posts)),
    },
  };
}
